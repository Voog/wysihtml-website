// CUSTOM MIXINS
// Comment out the "_mixins.scss" partial in the "main.scss" file if not used.

// GENERAL
@mixin calc($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

// BOXES
@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
  -webkit-box-shadow: $top $left $blur $color #{$inset};
     -moz-box-shadow: $top $left $blur $color #{$inset};
          box-shadow: $top $left $blur $color #{$inset};
}
@mixin no-box-shadow($value: none) {
  -webkit-box-shadow: $value;
     -moz-box-shadow: $value;
          box-shadow: $value;
}

// COLORS
@mixin bg($color, $opacity: 1) {
  @if $opacity == 1 {
    background-color: rgba($color, $opacity);
  } @else {
    background-color: $color;
    background-color: rgba($color, $opacity);
  }
}

@mixin color($color, $opacity: 1) {
  @if $opacity == 1 {
    color: rgba($color, $opacity);
  } @else {
    color: $color;
    color: rgba($color, $opacity);
  }
}

@mixin fill($color, $opacity: 1) {
  @if $opacity == 1 {
    fill: rgba($color, $opacity);
  } @else {
    fill: $color;
    fill: rgba($color, $opacity);
  }
}

// BORDERS
@mixin border($side, $width, $style, $color, $opacity: 1) {
  @if $side == 'all' {
    @if $opacity == 1 {
      border: $width $style rgba($color, $opacity);
    } @else {
      border: $width $style $color;
      border: $width $style rgba($color, $opacity);
    }
  } @else {
    @if $opacity == 1 {
      border-#{$side}: $width $style rgba($color, $opacity);
    } @else {
      border-#{$side}: $width $style $color;
      border-#{$side}: $width $style rgba($color, $opacity);
    }
  }
}

// PERSPECTIVE
@mixin perspective($value: 1000) {
  -webkit-perspective: $value;
  -webkit-backface-visibility: hidden;
}

// WEBKIT INPUT BUTTON STYLE RESET
@mixin inputiosreset {
  -webkit-appearance: none;
  -webkit-border-radius: 0;
          border-radius: 0;
}

// OPACITY
@mixin opacity($value){
  $IEValue: $value*100;
  opacity: $value;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
  filter: alpha(opacity=$IEValue);
}

// MEDIA QUERY
@mixin query($value: $tablet-1) {
  @media screen and (max-width: $value) {
    @content;
  }
}
